Admin@123#$


DATAGRID VIEW UPLOAD DATA
==================================
cbbCustomerId.Text = dgvCustomer.Rows[e.RowIndex].Cells[0].Value.ToString();








LOGIN FORM
=========================

using System;
using System.Data;
using System.Data.SqlClient;
using System.Threading;
using System.Windows.Forms;
using System.Globalization;
using System.IO;
using System.Windows.Markup;

namespace Alshukri_Supermarket_System
{
	public partial class frmLogin : Form
	{

		SqlConnection con = new SqlConnection("Data Source=WBH2;Initial Catalog=alShukriDB1;Integrated Security=True"); // making connection   
		SqlCommand cmd;


        frmSplash splash = new frmSplash();


        sharedClass main = new sharedClass();

		string message = "Are you sure to change your password ?";
		string title = "Confirmation box";
		MessageBoxButtons yesno = MessageBoxButtons.YesNo;
		DialogResult result;
		string userType;

		sharedClass mainClass = new sharedClass();

		string query, attemptedUser;
		int attempt = 0;

		public frmLogin()
		{
			InitializeComponent();



			//Create new thread to run the splash screen
			Thread t = new Thread(new ThreadStart(StartForm));
			t.Start();
			Thread.Sleep(4000);// increase or decrease here the timeSplashing
            t.Abort();
			splash.Close();
		}

        public void StartForm()
        {
            try
            {
                Application.Run(new frmSplash());
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                splash.Close();
            }
        }

		private void btnBackLogin_Click(object sender, EventArgs e)
		{
			splitContainer1.Panel2Collapsed = true;
		}


		// forgot link for resetting the PASSWORD - Shows the resetting feature
		private void forgotlbl_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
		{
			splitContainer1.Panel1Collapsed = true;

            cbbQuestion.Visible = false;

            lblMain.Text = "Recover your account";

            btnRecover.Text = "Recover";

		}

		private void btnSignUp_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
		{
			MessageBox.Show("only admin can create account!, if you are admin - login to your account then create a new account");
		}

		private void frmLogin_Load(object sender, EventArgs e)
		{

		}

		// code for userType selection - FUNCTION
		public void checkRadiobutton()
		{
			if (rdbAdminstrator.Checked == true)
			{
				userType = "Admin";
			}
			else if (rdbEmployee.Checked == true)
			{
				userType = "Employee";
			}
			else
			{
				MessageBox.Show("usertype not selected !");
			}
		}


		// does the Reset-Password process - FUNCTION
		public void resetPassword()
		{
			try
			{
				// trying to verify who want to reset this account
				SqlDataAdapter sda = new SqlDataAdapter("SELECT COUNT(*) FROM tblUser WHERE employee_id='" +
				  cbbEmployeeId.Text + "' AND username='" + cbbUserName.Text + "' AND recoveryAnswer='" + cbbAnswer.Text + "'", con);
				/* in above line the program is selecting the whole data from table and the matching it with the user name,usertype and password provided by user. */
				DataTable dt = new DataTable(); //this is creating a virtual table  
				sda.Fill(dt);


				if (dt.Rows[0][0].ToString() == "1")
				{
					try
					{
						result = MessageBox.Show(message, title, yesno);
						if (result == DialogResult.Yes)
						{
							cmd = new SqlCommand("update tblUser set password='" + cbbNewPassword.Text + "' where employee_id=" + cbbEmployeeId.Text + "", con);
							con.Open();
							cmd.ExecuteNonQuery();

							MessageBox.Show("Successfully resetted, please remember it");
							con.Close();
						}
						else
						{
							MessageBox.Show("Canceled by user, not resetted");
						}
					}
					catch (Exception ex)
					{
						MessageBox.Show(ex.Message, "Password not resetted, there is an issue !");
					}
					finally
					{
						con.Close();
					}
				}
				else
				{
					MessageBox.Show("Your verification is invalid, please ensure that your entry relates to you.");
				}

			}
			catch (Exception ex)
			{
				MessageBox.Show(ex.Message);
			}
		}

		// does the login process - FUNCTION
		public void loginFunction()
		{
			try
			{
				progressBar1.Visible = true;

				checkRadiobutton();

				string userName, password;

				userName = txtUserName.Text.ToString();
				password = txtPassWord.Text.ToString();

				SqlDataAdapter sda = new SqlDataAdapter("SELECT COUNT(*) FROM tblUser WHERE usertype='" +
					userType + "' AND username='" + userName + "' AND password='" + password + "'AND userStatus='Active'", con);
				/* in above line the program is selecting the whole data from table and the matching it with the username,usertype and password provided by user. */
				DataTable dt = new DataTable(); //this is creating a virtual table  

				sda.Fill(dt);

				SqlDataAdapter daValidationForSecurity = new SqlDataAdapter("select username,userType,userStatus from tblUser where username = '" + userName + "'", con);
				DataTable dtValidationForSecurity = new DataTable(); //this is creating a virtual table  
				daValidationForSecurity.Fill(dtValidationForSecurity);


                SqlDataAdapter checkExistense = new SqlDataAdapter("SELECT COUNT(username) FROM tblUser WHERE username = '" + userName + "'", con);
                DataTable check = new DataTable();
                checkExistense.Fill(check);


                if (check.Rows[0][0].ToString() == "0")
                {
                    MessageBox.Show("This username is not valid at the system !");
                }
                else if (dt.Rows[0][0].ToString() == "1")
				{
					/* I have made a new page called home page. If the user is successfully authenticated then the form will be moved to the next form */
					this.Hide();
					frmDashboard frm = new frmDashboard();

					// PREPARING to move to Dashboard
					if (userType == "Admin")
					{
						frm.typeuser.Text = "Admin: ";
						frm.lblUsername.Text = userName;


						// this code changes the label up-right corner to the selected userPower

					}
					else
					{
						frm.typeuser.Text = "Employee: ";
						frm.lblUsername.Text = userName;

						frm.Width = 1105;
						frm.Height = 527;

						frm.btnEmployee.Visible = false;
						frm.btnSalary.Visible = false;
						frm.btnExpense.Visible = false;
						frm.btnIncome.Visible = false;
					}
					frm.ShowDialog();
				}
				else if (dtValidationForSecurity.Rows[0][2].ToString() == "Blocked")
				{
					MessageBox.Show("you have too many failed attempts! so we have blocked your username for security reason, contact to your manager soon ");

				}
				else if (dtValidationForSecurity.Rows[0][0].ToString() == "")
				{
					MessageBox.Show("Invalid username or password if you are new to the system, create your account or contact to your admin ");
				}
				else if (userName == dtValidationForSecurity.Rows[0][0].ToString() && dtValidationForSecurity.Rows[0][1].ToString() != "Admin")
				{
					attemptedUser = dtValidationForSecurity.Rows[0][0].ToString();
					limitAttempt();
				}
				else if (dtValidationForSecurity.Rows[0][1].ToString() == "Admin" && dt.Rows[0][0].ToString() != "1")
				{
					MessageBox.Show("Invalid username or password ensure your details ");

				}

			}

			catch (Exception ex)
			{
				MessageBox.Show(ex.Message);
			}
		}

		public void limitAttempt()
		{
			try
			{
				query = "update tblUser set userStatus='Blocked' where userName = '" + txtUserName.Text.ToString() + "'";

				if (attempt < 5 && attemptedUser == lblActive.Text)
				{
					attempt++;

					int chancesLeft;
					chancesLeft = 5 - attempt;

					MessageBox.Show("Invalid username or password otherwise check if your account disabled");
					progressBar1.Value = progressBar1.Value + 20;
					MessageBox.Show(chancesLeft + " attempts left for blocking " + attemptedUser);

					lblActive.Text = txtUserName.Text.ToString();
				}
				else if (attempt >= 5 && attemptedUser == lblActive.Text)
				{
					cmd = new SqlCommand(query, con);

					con.Open();
					cmd.ExecuteNonQuery();
					con.Close();

					progressBar1.Value = 0;
					MessageBox.Show("you have too many failed attempts! so we have blocked your username for security reason, contact to your manager soon ");
					attempt = 0;
				}
				else if (attemptedUser != lblActive.Text)
				{
					attempt = 0;
					attempt++;

					progressBar1.Value = 0;

					int chancesLeft;
					chancesLeft = 5 - attempt;

					MessageBox.Show(attemptedUser + " will be blocked if too many wrong attempts, please be carefull.");
					progressBar1.Value = progressBar1.Value + 20;
					MessageBox.Show(chancesLeft + " attempts left for blocking " + attemptedUser);

					lblActive.Text = txtUserName.Text.ToString();
				}
				else
				{
					attempt = 0;
					attempt++;
					progressBar1.Value = 0;

					int chancesLeft;
					chancesLeft = 5 - attempt;
					MessageBox.Show("Invalid username or password otherwise check if your account disabled !!!  attempt : " + attempt);

					progressBar1.Value = progressBar1.Value + 20;
					MessageBox.Show(chancesLeft + " attempts left for blocking " + attemptedUser);

					lblActive.Text = txtUserName.Text.ToString();

				}
			}
			catch (Exception ex)
			{
				MessageBox.Show(ex.Message);
			}
		}

		// activates the login BUTTON
		private void btnLogin_Click(object sender, EventArgs e)
		{
			loginFunction();
		}

        public void newUser()
        {
            try
            {

                string addUser = "insert into tblUser (username,password,usertype,recoveryQuestion,recoveryAnswer,userstatus, employee_id) values('" +
                    cbbUserName.Text + "','" + cbbNewPassword.Text + "','Employee','" + cbbQuestion.Text + "','" + cbbAnswer.Text + "','blocked'," + cbbEmployeeId.Text + ")";

                cmd = new SqlCommand(addUser, con);

                con.Open();

                cmd.ExecuteNonQuery();

                MessageBox.Show("user registered succesfully, your user will be activated by your manager");

                con.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                con.Close();
            }
        }

		// activates the reset BUTTON
		private void btnRecover_Click(object sender, EventArgs e)
		{

            try
            {
                if (con.State == ConnectionState.Open)
                {
                    con.Close();
                }
                else if (con.State == ConnectionState.Closed)
                {

                    if (cbbQuestion.Visible == true)
                    {
                        newUser();
                    }
                    else if (cbbQuestion.Visible == false)
                    {
                        resetPassword();
                    }

                    con.Close();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
           
		}

		private void frmLogin_Load_1(object sender, EventArgs e)
		{
			progressBar1.Visible = false;
		}

		private void button2_Click(object sender, EventArgs e)
		{
			frmDashboard dashboard= new frmDashboard();
			dashboard.ShowDialog();
		}

		private void clearbtn_Click(object sender, EventArgs e)
		{
            Application.Exit();
		}

        // make the password VISIBLE - or Hide RECOVER VIEW
        private void btnShow2_Click(object sender, EventArgs e)
        {
            if (cbbNewPassword.UseSystemPasswordChar == true)
            {
                cbbNewPassword.UseSystemPasswordChar = false;
                btnShow2.Text = "Show";
            }
            else
            {
                cbbNewPassword.UseSystemPasswordChar = true;
                btnShow2.Text = "Hide";
            }

        }

        // make the password VISIBLE - or Hide LOIGIN VIEW
        private void btnShow1_Click(object sender, EventArgs e)
        {
            if (txtPassWord.UseSystemPasswordChar == true)
            {
                txtPassWord.UseSystemPasswordChar = false;
                btnShow1.Text = "Show";
            }
            else
            {
                txtPassWord.UseSystemPasswordChar = true;
                btnShow1.Text = "Hide";
            }

        }

        private void btnSignUp_LinkClicked_1(object sender, LinkLabelLinkClickedEventArgs e)
        {
            splitContainer1.Panel1Collapsed = true;
            cbbQuestion.Visible = true;


            lblMain.Text = "Register new account";
            btnRecover.Text = "Register";

        }

        private void cbbUserName_TextChanged(object sender, EventArgs e)
        {
            
        }

        private void cbbUserName_MouseLeave(object sender, EventArgs e)
        {
          
        }

        private void cbbUserName_Leave(object sender, EventArgs e)
        {
            try
            {
                string readQuestion = "select recoveryQuestion from tblUser where username = '" + cbbUserName.Text + "'";

                SqlDataAdapter adapter = new SqlDataAdapter(readQuestion, con);
                DataTable dt = new DataTable();
                adapter.Fill(dt);

                if (dt.Rows[0][0].ToString() != null)
                {
                    lblQuestion.Text = dt.Rows[0][0].ToString();
                }
                else
                {
                    MessageBox.Show("user doesn't exist");
                }

            }
            catch (Exception ex)
            {

            }
            finally
            {
                con.Close();
            }
        }
}







REPORTING FORM
====================================

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace Alshukri_Supermarket_System
{
    public partial class frmReport : Form
    {

        sharedClass main = new sharedClass();

        Reporting.reportCustomer rptCustomer = new Reporting.reportCustomer();
        Reporting.reportSales rptSales = new Reporting.reportSales();
        Reporting.reportEmployee rptEmployee = new Reporting.reportEmployee();
        Reporting.reportExpense_command rptExpense = new Reporting.reportExpense_command();
        Reporting.reportIncome_command rptIncome = new Reporting.reportIncome_command();
        Reporting.reportUsers rptUsers = new Reporting.reportUsers();
        Reporting.reportLoans rptLoans = new Reporting.reportLoans();
        Reporting.reportProducts rptProducts = new Reporting.reportProducts();
        Reporting.reportSupplier_command rptSupplier = new Reporting.reportSupplier_command();
        Reporting.reportReturnProducts rptReturnProducts = new Reporting.reportReturnProducts();
        Reporting.reportInvoice rptInvoice = new Reporting.reportInvoice();
        Reporting.reportSalary rptSalary = new Reporting.reportSalary();
        Reporting.reportReports rptReports = new Reporting.reportReports();


        public string reportingTable, exactReport;

        string date1, date2;

        public frmReport()
        {
            InitializeComponent();
        }

        private void btnSales_Click(object sender, EventArgs e)
        {

            customizeReporting();
            pnlSales.Visible = true;


            viewReports();
        }

        public void SetDates()
        {
            date1 = pickerOne.Value.Year + "." + pickerOne.Value.Month + "." + pickerOne.Value.Day;
            date2 = pickerTwo.Value.Year + "." + pickerTwo.Value.Month + "." + pickerTwo.Value.Day;
        }

        public void panelsControl()
        {
            // this simple code enables the panels above the buttons
            pnlCustomer.Visible = false;
            pnlPayment.Visible = false;
            pnlSales.Visible = false;
            pnlReport.Visible = false;
            pnlReport.Visible = false;
            pnlUsers.Visible = false;
            pnlExpense.Visible = false;
            pnlEmployee.Visible = false;
            pnlProducts.Visible = false;
            pnlIncome.Visible = false;


            // this simple code selects which crystalReportViewer you are seeing

        }

        // this function holds the filtering of PAYMNET tableFrom
        public void reportSearch(string fromTable)
        {
            SetDates();

            try
            {
                if (checkAdvancedSearch.Checked == true)
                {

                    main.OpenConnection();

                    DataTable dt = new DataTable();
                    main.cmd = new SqlCommand("select * from " + fromTable + " where concat(sale_id,item_name,product_id,quantity,price,netPrice,discount,payment_id,customer_id,date,capturedAmount) like '%" + cbbSearch.Text + "%'", main.con);
                    main.adapt = new SqlDataAdapter(main.cmd);
                    main.adapt.Fill(dt);

                    rptSales.SetDataSource(dt);
                    reportViewer.ReportSource = rptSales;

                    main.CloseConnection();
                }

                else
                {
                    main.OpenConnection();

                    DataTable dt = new DataTable();
                    main.cmd = new SqlCommand("Select * from " + fromTable + " where date between '" + date1 + "' and '" + date2 + "'", main.con);
                    main.adapt = new SqlDataAdapter(main.cmd);
                    main.adapt.Fill(dt);

                    rptSales.SetDataSource(dt);
                    reportViewer.ReportSource = rptSales;

                    main.CloseConnection();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                main.CloseConnection();
                cbbSearch.Focus();
            }
        }

        // this method is for changing tableView to tableView 

        public void viewReports()
        {
            try
            {
                //main.OpenConnection();

                //DataTable dt = new DataTable();
                //main.cmd = new SqlCommand(reportingTable, main.con);
                //main.adapt = new SqlDataAdapter(main.cmd);
                //main.adapt.Fill(dt);


                reportingTable = "D:\\Main project\\POS-MSystem - v2.1 develop Reporting + SETUP\\Alshukri_Supermarket_System\\Reporting\\" + exactReport + "";


                if(pnlCustomer.Visible == true)
                {
                    exactReport = "reportCustomer.rpt";

                    rptCustomer.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptCustomer;
                }
                else if (pnlEmployee.Visible == true)
                {
                    exactReport = "reportEmployee.rpt";

                    rptEmployee.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptEmployee;
                }
                else if (pnlSalary.Visible == true)
                {
                    exactReport = "reportSalary.rpt";

                    rptSalary.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptSalary;
                }
                else if (pnlSales.Visible == true)
                {
                    exactReport = "reportSales.rpt";

                    rptSales.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptSales;

                }
                else if (pnlLoan.Visible == true)
                {

                    exactReport = "reportLoan.rpt";

                    rptLoans.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptLoans;

                }
                else if (pnlUsers.Visible == true)
                {
                    exactReport = "reportUsers.rpt";

                    rptUsers.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptUsers;
                }
                else if (pnlSupplier.Visible == true)
                {
                    exactReport = "reportSupplier_command.rpt";

                    rptSupplier.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptSupplier;

                }
                else if (pnlProducts.Visible == true)
                {
                    exactReport = "reportProducts.rpt";

                    rptProducts.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptProducts;
                }
                else if (pnlExpense.Visible == true)
                {

                    exactReport = "reportExpense_command.rpt";

                    rptExpense.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptExpense;
                }
                else if (pnlIncome.Visible == true)
                {
                    exactReport = "reportIncome_command.rpt";

                    rptIncome.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptIncome;

                }
                else if (pnlReport.Visible == true)
                {

                    exactReport = "reportReports.rpt";

                    rptReports.Load(reportingTable + exactReport);
                    reportViewer.ReportSource = rptReports;

                }


                reportViewer.RefreshReport();

                //main.CloseConnection();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                //main.CloseConnection();
            }
        }

        private void frmReport_Load(object sender, EventArgs e)
        {
           
        }

        private void btnCustomer_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlCustomer.Visible = true;

            viewReports();
        }

        private void btnPayment_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlPayment.Visible = true;

            viewReports();
        }

        public void customizeReporting()
        {
            try
            {
                pnlCustomer.Visible = false;
                pnlLoan.Visible = false;
                pnlEmployee.Visible = false;
                pnlPayment.Visible = false;
                pnlSalary.Visible = false;
                pnlSales.Visible = false;
                pnlUsers.Visible = false;
                pnlReport.Visible = false;
                pnlIncome.Visible = false;
                pnlExpense.Visible = false;
                pnlProducts.Visible = false;
                pnlSupplier.Visible = false;
                pnlSupplier2.Visible = false;

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

        }

        private void btnSalary_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlSalary.Visible = true;

            viewReports();
        }

        private void btnEmployee_Click(object sender, EventArgs e)
        {

        }

        private void cbbSearch_TextChanged(object sender, EventArgs e)
        {
            if (pnlSales.Visible == true)
            {
                reportSearch("tblSales");

            }

        }

        private void btnGetSearched_Click(object sender, EventArgs e)
        {

        }

        private void pickerTwo_ValueChanged(object sender, EventArgs e)
        {
            //if (pnlReport.Visible == true)
            //{
            //    reportSearch("tblReport");
            //}
            //else if (pnlSupplier2.Visible == true)
            //{
            //    reportSearch("tblSupplier");
            //}
            //else if (pnlSupplier2.Visible == true)
            //{
            //    reportSearch("tblSales");
            //}
            //else if (pnlSupplier2.Visible == true)
            //{
            //    reportSearch("tblSales");
            //}
            //else if (pnlSupplier2.Visible == true)
            //{
            //    reportSearch("tblSales");
            //}
            //else if (pnlSupplier2.Visible == true)
            //{
            //    reportSearch("tblSales");
            //}
            //else if (pnlSupplier2.Visible == true)
            //{
            //    reportSearch("tblSales");
            //}

        }

        private void checkAdvancedSearch_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void btnUsers_Click(object sender, EventArgs e)
        {

            customizeReporting();
            
            pnlUsers.Visible = true;

            viewReports();
        }

        private void btnSupplier_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlSupplier2.Visible = true;
            pnlSupplier.Visible = true;

            viewReports();
        }

        private void btnProducts_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlProducts.Visible = true;

            viewReports();
        }

        private void btnIncome_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlIncome.Visible = true;

            viewReports();
        }

        private void btnExpense_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlExpense.Visible = true;

            viewReports();
        }

        private void btnEmployee_Click_1(object sender, EventArgs e)
        {
            customizeReporting();

            pnlEmployee.Visible = true;

            viewReports();
        }

        private void btnReports_Click(object sender, EventArgs e)
        {
            customizeReporting();

            pnlReport.Visible = true;

            viewReports();
        }

        private void btnLoan_Click(object sender, EventArgs e)
        {

            customizeReporting();

            pnlLoan.Visible = true;

            viewReports();
        }
    }
}
